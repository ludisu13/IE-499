$date
	Sun May 29 05:21:56 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TestBench $end
$var wire 64 ! data [63:0] $end
$var wire 1 " fifo_empty $end
$var wire 1 # fifo_full $end
$var wire 64 $ q [63:0] $end
$var wire 1 % read_clock $end
$var wire 1 & read_enable $end
$var wire 1 ' reset $end
$var wire 1 ( write_clock $end
$var wire 1 ) write_enable $end
$scope module fifo1 $end
$var wire 3 * almost_empty [2:0] $end
$var wire 3 + almost_full [2:0] $end
$var wire 64 , data [63:0] $end
$var wire 1 % read_clock $end
$var wire 1 & read_enable $end
$var wire 1 ' reset $end
$var wire 1 ( write_clock $end
$var wire 1 ) write_enable $end
$var reg 1 - fifo_empty $end
$var reg 1 . fifo_full $end
$var reg 64 / q [63:0] $end
$var reg 3 0 read_pointer [2:0] $end
$var reg 3 1 write_pointer [2:0] $end
$upscope $end
$scope module gen_fifo $end
$var wire 64 2 data [63:0] $end
$var wire 1 % read_clock $end
$var wire 1 & read_enable $end
$var wire 1 ' reset $end
$var wire 1 ( write_clock $end
$var wire 1 ) write_enable $end
$scope module rcg $end
$var reg 1 3 clock $end
$upscope $end
$scope module wcg $end
$var reg 1 4 clock $end
$upscope $end
$scope module resg $end
$var reg 1 5 reset $end
$upscope $end
$scope module datg $end
$var reg 64 6 data [63:0] $end
$upscope $end
$scope module weng $end
$var reg 1 7 we $end
$upscope $end
$scope module reng $end
$var reg 1 8 re $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
08
07
b0 6
05
04
03
b0 2
bx 1
bx 0
bx /
x.
x-
b0 ,
bx +
bx *
0)
0(
0'
0&
0%
bx $
x#
x"
b0 !
$end
#20000
14
1(
#30000
13
1%
#40000
04
0(
#50000
b111 *
b111 +
1-
1"
0.
0#
b0 1
b0 0
15
1'
#60000
14
1(
03
0%
b1 6
b1 !
b1 ,
b1 2
#80000
04
0(
#90000
13
1%
#100000
14
1(
05
0'
#120000
04
0(
03
0%
b10 6
b10 !
b10 ,
b10 2
#140000
14
1(
#150000
13
1%
#160000
04
0(
#180000
14
1(
03
0%
b11 6
b11 !
b11 ,
b11 2
#200000
04
0(
#210000
13
1%
#220000
14
1(
#240000
04
0(
03
0%
b100 6
b100 !
b100 ,
b100 2
#260000
14
1(
#270000
13
1%
#280000
04
0(
#300000
14
1(
03
0%
b101 6
b101 !
b101 ,
b101 2
18
1&
#320000
04
0(
#330000
13
1%
#340000
14
1(
#350000
17
1)
#360000
04
0(
03
0%
b110 6
b110 !
b110 ,
b110 2
#380000
b0 *
b110 +
b1 1
0-
0"
14
1(
#390000
b111 *
b111 +
b1 0
b110 /
b110 $
1-
1"
13
1%
#400000
04
0(
#420000
b0 *
b110 +
b10 1
0-
0"
14
1(
03
0%
b111 6
b111 !
b111 ,
b111 2
#440000
04
0(
#450000
b111 *
b111 +
b10 0
b111 /
b111 $
1-
1"
13
1%
#460000
b0 *
b110 +
b11 1
0-
0"
14
1(
#480000
04
0(
03
0%
b1000 6
b1000 !
b1000 ,
b1000 2
#500000
b1 *
b101 +
b100 1
14
1(
#510000
b0 *
b110 +
b11 0
13
1%
#520000
04
0(
#540000
b1 *
b101 +
b101 1
14
1(
03
0%
b1001 6
b1001 !
b1001 ,
b1001 2
#560000
04
0(
#570000
b0 *
b110 +
b100 0
b1000 /
b1000 $
13
1%
#580000
b1 *
b101 +
b110 1
14
1(
#600000
04
0(
03
0%
b1010 6
b1010 !
b1010 ,
b1010 2
#620000
b10 *
b100 +
b111 1
14
1(
#630000
b1 *
b101 +
b101 0
b1001 /
b1001 $
13
1%
#640000
04
0(
#660000
b10 *
b100 +
b0 1
14
1(
03
0%
b1011 6
b1011 !
b1011 ,
b1011 2
#680000
04
0(
#690000
b1 *
b101 +
b110 0
13
1%
#700000
b10 *
b100 +
b1 1
14
1(
#720000
04
0(
03
0%
b1100 6
b1100 !
b1100 ,
b1100 2
#740000
b11 *
b11 +
b10 1
14
1(
#750000
b10 *
b100 +
b111 0
b1010 /
b1010 $
13
1%
#760000
04
0(
#780000
b11 *
b11 +
b11 1
14
1(
03
0%
b1101 6
b1101 !
b1101 ,
b1101 2
#800000
04
0(
08
0&
#810000
13
1%
#820000
b100 *
b10 +
b100 1
14
1(
#840000
04
0(
03
0%
b1110 6
b1110 !
b1110 ,
b1110 2
#860000
b101 *
b1 +
b101 1
14
1(
#870000
13
1%
#880000
04
0(
#900000
b110 *
b0 +
b110 1
14
1(
03
0%
b1111 6
b1111 !
b1111 ,
b1111 2
#920000
04
0(
#930000
13
1%
#940000
b111 *
b111 +
b111 1
1.
1#
14
1(
#960000
04
0(
03
0%
b10000 6
b10000 !
b10000 ,
b10000 2
#980000
14
1(
#990000
13
1%
#1000000
04
0(
#1020000
14
1(
03
0%
b10001 6
b10001 !
b10001 ,
b10001 2
#1040000
04
0(
#1050000
13
1%
#1060000
14
1(
#1080000
04
0(
03
0%
b10010 6
b10010 !
b10010 ,
b10010 2
#1100000
14
1(
18
1&
