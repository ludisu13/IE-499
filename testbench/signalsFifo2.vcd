$date
	Fri Jul  1 15:49:16 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TestBench $end
$var wire 64 ! data [63:0] $end
$var wire 1 " fifo_empty $end
$var wire 1 # fifo_full $end
$var wire 64 $ q [63:0] $end
$var wire 1 % read_clock $end
$var wire 1 & read_enable $end
$var wire 1 ' reset $end
$var wire 1 ( write_clock $end
$var wire 1 ) write_enable $end
$scope module fifo1 $end
$var wire 3 * almost_empty [2:0] $end
$var wire 3 + almost_full [2:0] $end
$var wire 64 , data [63:0] $end
$var wire 1 % read_clock $end
$var wire 1 & read_enable $end
$var wire 1 ' reset $end
$var wire 64 - test [63:0] $end
$var wire 64 . test1 [63:0] $end
$var wire 1 ( write_clock $end
$var wire 1 ) write_enable $end
$var reg 1 / control $end
$var reg 1 0 fifo_empty $end
$var reg 1 1 fifo_full $end
$var reg 64 2 q [63:0] $end
$var reg 1 3 read_enable_d $end
$var reg 3 4 read_pointer [2:0] $end
$var reg 1 5 write_enable_d $end
$var reg 3 6 write_pointer [2:0] $end
$upscope $end
$scope module gen_fifo $end
$var wire 64 7 data [63:0] $end
$var wire 1 % read_clock $end
$var wire 1 & read_enable $end
$var wire 1 ' reset $end
$var wire 1 ( write_clock $end
$var wire 1 ) write_enable $end
$scope module rcg $end
$var reg 1 8 clock $end
$upscope $end
$scope module wcg $end
$var reg 1 9 clock $end
$upscope $end
$scope module resg $end
$var reg 1 : reset $end
$upscope $end
$scope module datg $end
$var reg 64 ; data [63:0] $end
$upscope $end
$scope module weng $end
$var reg 1 < we $end
$upscope $end
$scope module reng $end
$var reg 1 = re $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
0<
b0 ;
0:
09
08
b0 7
bx 6
05
bx 4
03
bx 2
x1
x0
x/
bz .
bz -
b0 ,
bx +
bx *
0)
0(
0'
0&
0%
bx $
x#
x"
b0 !
$end
#40000
19
1(
18
1%
b1 ;
b1 !
b1 ,
b1 7
#50000
b111 *
b111 +
0/
b0 2
b0 $
10
1"
01
0#
b0 6
b0 4
1:
1'
#60000
09
0(
08
0%
#80000
19
1(
18
1%
b10 ;
b10 !
b10 ,
b10 7
#100000
09
0(
08
0%
0:
0'
#120000
19
1(
18
1%
b11 ;
b11 !
b11 ,
b11 7
#140000
09
0(
08
0%
#160000
19
1(
18
1%
b100 ;
b100 !
b100 ,
b100 7
#180000
09
0(
08
0%
#200000
19
1(
18
1%
b101 ;
b101 !
b101 ,
b101 7
#220000
09
0(
08
0%
#240000
19
1(
18
1%
b110 ;
b110 !
b110 ,
b110 7
#260000
09
0(
08
0%
#280000
19
1(
18
1%
b111 ;
b111 !
b111 ,
b111 7
#300000
09
0(
08
0%
#320000
15
b0 *
b110 +
b1000 .
00
0"
b1 6
19
1(
18
1%
b1000 ;
b1000 !
b1000 ,
b1000 7
1<
1)
#340000
09
0(
08
0%
#360000
b1 *
b101 +
b10 6
19
1(
18
1%
b1001 ;
b1001 !
b1001 ,
b1001 7
#380000
09
0(
08
0%
#400000
05
b10 *
b100 +
b11 6
19
1(
18
1%
b1010 ;
b1010 !
b1010 ,
b1010 7
0<
0)
#420000
09
0(
08
0%
#440000
19
1(
18
1%
b1011 ;
b1011 !
b1011 ,
b1011 7
#460000
09
0(
08
0%
#480000
13
b1 *
b101 +
b1000 2
b1000 $
b1 4
19
1(
18
1%
b1100 ;
b1100 !
b1100 ,
b1100 7
1=
1&
#500000
09
0(
08
0%
#520000
10
1"
b0 *
b110 +
b1001 2
b1001 $
b10 4
19
1(
18
1%
b1101 ;
b1101 !
b1101 ,
b1101 7
#540000
09
0(
08
0%
#560000
19
1(
18
1%
b1110 ;
b1110 !
b1110 ,
b1110 7
#580000
09
0(
08
0%
#600000
19
1(
18
1%
b1111 ;
b1111 !
b1111 ,
b1111 7
#620000
09
0(
08
0%
#640000
19
1(
18
1%
b10000 ;
b10000 !
b10000 ,
b10000 7
#660000
09
0(
08
0%
#680000
19
1(
18
1%
b10001 ;
b10001 !
b10001 ,
b10001 7
#700000
09
0(
08
0%
#720000
15
00
0"
b1 *
b101 +
b100 6
19
1(
18
1%
b10010 ;
b10010 !
b10010 ,
b10010 7
1<
1)
#740000
09
0(
08
0%
#760000
b101 6
bx 2
bx $
b11 4
19
1(
18
1%
b10011 ;
b10011 !
b10011 ,
b10011 7
#780000
09
0(
08
0%
#800000
05
b110 6
b10010 2
b10010 $
b100 4
19
1(
18
1%
b10100 ;
b10100 !
b10100 ,
b10100 7
0<
0)
#820000
09
0(
08
0%
#840000
b0 *
b110 +
bx 2
bx $
b101 4
19
1(
18
1%
b10101 ;
b10101 !
b10101 ,
b10101 7
#860000
09
0(
08
0%
#880000
10
1"
b111 *
b111 +
b110 4
19
1(
18
1%
b10110 ;
b10110 !
b10110 ,
b10110 7
#900000
09
0(
08
0%
#920000
19
1(
18
1%
b10111 ;
b10111 !
b10111 ,
b10111 7
#940000
09
0(
08
0%
#960000
19
1(
18
1%
b11000 ;
b11000 !
b11000 ,
b11000 7
#980000
03
09
0(
08
0%
0=
0&
#1000000
19
1(
18
1%
b11001 ;
b11001 !
b11001 ,
b11001 7
#1020000
09
0(
08
0%
#1040000
19
1(
18
1%
b11010 ;
b11010 !
b11010 ,
b11010 7
#1060000
09
0(
08
0%
#1080000
19
1(
18
1%
b11011 ;
b11011 !
b11011 ,
b11011 7
#1100000
09
0(
08
0%
